{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"uTAIaA,G,MAAO,SAACC,GAAD,OAChB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCFbC,G,MAAW,SAACR,GACrB,OACI,yBAAKC,UAAU,aACdD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,UCN/BQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCHG,G,wDApCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAOrC,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAiBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC5CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,yBAAK/B,UAAU,OACb,gDACA,kBAAC,EAAD,CACEY,YAAY,oBACZC,aAAce,KAAKf,eAErB,kBAAC,EAAD,CAAUL,SAAUqB,S,GA/BVI,cCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f4cab83b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h3>{props.monster.name}</h3>\n        <p>{props.monster.email}</p>\n    </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component' \n    \nimport './card-list.styles.css'\n\nexport const CardList = (props) => {\n    return (\n        <div className='card-list'>\n        {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n        </div>\n    )\n}","import React from 'react';\n\nimport './search-box.styles.css';\n/* component driven style, functional components*/\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n);","import React, { Component } from \"react\";\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters..'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}